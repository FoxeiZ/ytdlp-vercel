{% macro button(text, className='', outline=False, selected=False) %}
{# This macro now relies on the `id` attribute (passed via kwargs) for JS hooks, not onclick. #}
{% set classes = classlist(className) %}
{% if outline %}{{ classes.add("box-outline") }}{% endif %}
{% if selected %}{{ classes.add("selected") }}{% endif %}
<button-component {{ classes }} {{ kwargs|xmlattr }}>
  {{ text }}
</button-component>
{% endmacro %}


{% macro modal(title='', visible=False, className='', content_width='50%') %}
{# Removed the 'close_callback' parameter. #}
{% set classes = classlist(className, "modal") %}
{% if visible %}
{{ classes.add("visible") }}
{% else %}
{{ classes.add("hidden") }}
{% endif %}
{# The modal's ID is passed via kwargs (e.g., id='settings-modal') #}
<div {{ classes }} {{ kwargs|xmlattr }}>
  {% if title %}<p>{{ title }}</p>{% endif %}
  <div style="width: {{ content_width }};" class="modal-content">{{ caller() }}</div>
  {# Generate a standardized close button that JS can easily target. #}
  {{ button('close', className='js-modal-close') }}
</div>
{% endmacro %}


{% macro toggle_modal_options(title='', description='', input_id='') %}
<div class="toggle-modal-options">
  <div class="toggle-modal-left">
    <div class="toggle-modal-title">{{ title }}</div>
    {% if description %}<div class="toggle-modal-description">{{ description }}</div>{% endif %}
  </div>
  <label class="modal-toggle-button">
    <input id="{{ input_id }}" type="checkbox" {{ kwargs|xmlattr }}>
    <div>
      <span></span>
    </div>
  </label>
</div>
{% endmacro %}


{% macro input_modal_options(title='', description='', input_id='', type='text') %}
<div class="input-modal-options">
  <div class="input-modal-left">
    <div class="input-modal-title">{{ title }}</div>
    {% if description %}<div class="input-modal-description">{{ description }}</div>{% endif %}
  </div>
  <input id="{{ input_id }}" type="{{ type }}" {{ kwargs|xmlattr }}>
</div>
{% endmacro %}